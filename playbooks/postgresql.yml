---
- hosts: hetzner # or all or local
  become: yes
  vars_files:
    - vars.yml

  pre_tasks:
    - name: "Install packages"
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - openssl
        - libssl-dev
        - postgresql
        - postgresql-server
        - postgresql-contrib
        - libpq-dev
        - postgis

    - name: "Install Python Packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary
        - sqlalchemy
        - pgcli

  tasks:
    -name: "Make sure PostgreSQL is running"
    service: name=postgresql state=started enabled=yes

    - name: "Create app database"
        postgresql_db:
          state: present
          name: "{{ db_name }}"
        become: yes
        become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Adds postgis extension to the database epigraphhub in the schema public
      community.postgresql.postgresql_ext:
        name: postgis
        db: { { db_name } }
        schema: public
      become: yes
      become_user: postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
